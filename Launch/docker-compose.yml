version: "3.8"

services:

  docker_hms_postgres_image:
    image: postgres:14-alpine
    networks: 
      - hms_network
    ports:
      - 5433:5432
    environment: 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - hms_db:/var/postgresql/data

  docker_hms_api:
    image: perez247/hms_api
    restart: always
    networks: 
      - hms_network
    environment:
      - CONNECTION_STRING=${CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    depends_on: 
      - docker_hms_postgres_image
    ports:
      - "5000:80"

  docker_hms_frontend:
    image: perez247/hms_frontend
    restart: always
    networks: 
      - hms_network
    ports:
      - "4200:4200"
    
  docker_proxy_server:
    restart: always
    build:
      dockerfile: /proxy/Dockerfile
      context: ./
    networks: 
      - hms_network
    ports:
      - "80:80"
    depends_on: 
      - docker_hms_postgres_image
      - docker_hms_api

networks: 
  hms_network:
volumes: 
  hms_db: